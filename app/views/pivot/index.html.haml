.container
  %h2 Select Pivots from the list
  .pull-right
    %a.btn.btn-default.export{:href => '#'} Export to excel
  .row.text-center
    %br/
    %form
      %label.btn.btn-primary{:for => "primary"}
        Brand Name
        - if params['brand_name'] == 'on' || @default == 'on'
          %input#primary.badgebox{:type => "checkbox", :name => "brand_name", :checked => 'checked'}/
        - else
          %input#primary.badgebox{:type => "checkbox", :name => "brand_name"}/
        %span.badge &check;
      %label.btn.btn-danger{:for => "danger"}
        Group Name
        - if params['group_name'] == 'on'
          %input#danger.badgebox{:type => "checkbox", :name => "group_name", :checked => 'checked'}/
        - else
          %input#danger.badgebox{:type => "checkbox", :name => "group_name"}/
        %span.badge &check;
      %label.btn.btn-info{:for => "info"}
        Category
        - if params['category'] == 'on'
          %input#info.badgebox{:type => "checkbox", :name => "category", :checked => 'checked'}/
        - else
          %input#info.badgebox{:type => "checkbox", :name => "category"}/
        %span.badge &check;
      %label.btn.btn-success{:for => "success"}
        Item Code
        - if params['item_code'] == 'on'
          %input#success.badgebox{:type => "checkbox", :name => "item_code", :checked => 'checked'}/
        - else
          %input#success.badgebox{:type => "checkbox", :name => "item_code"}/
        %span.badge &check;
      %label.btn.btn-warning{:for => "warning"}
        Style
        - if params['style'] == 'on'
          %input#warning.badgebox{:type => "checkbox", :name => "style", :checked => 'checked'}/
        - else
          %input#warning.badgebox{:type => "checkbox", :name => "style"}/
        %span.badge &check;
      %button.btn.btn-default{:type => "submit"} Submit


  #dvData
    %table.table.table-striped
      %tr{:style => "font-weight: bold"}
        %td Group Name
        %td Brand Name
        - if params['category'] == 'on'
          %td Category
        - if params['item_code'] == 'on'
          %td Item Code
        - if params['style'] == 'on'
          %td Style
        %td Sum of Current year Sales.
        %td Sum of SOH.
        %td Sum of Sales in last 180 days.
        %td Sum of SOH by ROH
        %td Sum of SOH open order ROH
        %td core sales nod soh
        %td core sales nod soh oo
        %td Count arp


      - @core_tracker_templates.each do |core_tracker_template|
        %tr
          %td
            = core_tracker_template.group_name
          %td
            = core_tracker_template.brand_name
          - if params['category'] == 'on'
            %td
              = core_tracker_template.category
          - if params['item_code'] == 'on'
            %td
              = core_tracker_template.item_code
          - if params['style'] == 'on'
            %td
              = core_tracker_template.style
          %td
            = core_tracker_template.sum_cy_saleqty
          %td
            = core_tracker_template.sum_soh
          %td
            = core_tracker_template.sum_last_180days_saleqty
          %td
            - sum_of_soh_by_roh = 0
            - if !core_tracker_template.single_last_180days_saleqty.nil?
              - last_sales = core_tracker_template.single_last_180days_saleqty.split(',')
              - soh_array = core_tracker_template.single_soh.split(',')
              - last_sales.each_with_index do |last_180days_saleqty, index|
                - if last_180days_saleqty != "0"
                  - sum_of_soh_by_roh = sum_of_soh_by_roh + (soh_array[index].to_f / last_180days_saleqty.to_f * 180.00)
            = sum_of_soh_by_roh
          %td
            - sum_of_soh_oo_roh = 0
            - if !core_tracker_template.single_last_180days_saleqty.nil?
              - last_sales = core_tracker_template.single_last_180days_saleqty.split(',')
              - soh_array = core_tracker_template.single_soh.split(',')
              - open_po_array = core_tracker_template.single_open_po.split(',')
              - last_sales.each_with_index do |last_180days_saleqty, index|
                - if last_180days_saleqty != "0"
                  - sum_of_soh_oo_roh = sum_of_soh_oo_roh + ((soh_array[index].to_f + open_po_array[index].to_f) / last_180days_saleqty.to_f * 180.00)
            = sum_of_soh_oo_roh
          %td
            = (sum_of_soh_by_roh.to_f + core_tracker_template.sum_last_180days_saleqty.to_f + core_tracker_template.sum_soh.to_f)
          %td
            = (sum_of_soh_oo_roh.to_f + core_tracker_template.sum_last_180days_saleqty.to_f + core_tracker_template.sum_soh.to_f)

          %td
            = core_tracker_template.count_of_arp


.container
  %h2 Table number 2
  %p Sample for availability
  %table.table.table-striped
    %thead
      %tr
        %th Count arp
        %th count soh
        %th % of availability overall
    %tbody
      %tr
        %td
          = @count_of_arp
        %td
          = @count_of_arp_soh
        %td
          = (@count_of_arp_soh.to_f/@count_of_arp.to_f)*100

.container
  %h2 ARP with ZERO values
  %p arp 0 values.
  %table.table.table-striped
    %thead
      %tr
        %th Brand Name
        %th Group Name
        %th Category
        %th Style
        %th Color
        %th Sizee
        %th Item code
        %th SOH
        %th ARP value


    %tbody
      - @zero_arp.each do |zero_arp|
        %tr
          %td
            = zero_arp.brand_name
          %td
            = zero_arp.group_name
          %td
            = zero_arp.category
          %td
            = zero_arp.style
          %td
            = zero_arp.color
          %td
            = zero_arp.sizee
          %td
            = zero_arp.item_code
          %td
            = zero_arp.soh
          %td
            = zero_arp.arp_max
      %tr
        %td
          %b
            = "TOTAL: " + @zero_arp.count.to_s

.container
  %h2 soh less than arp
  %p soh<arp
  %table.table.table-striped
    %thead
      %tr
        %th Brand Name
        %th Group Name
        %th Category
        %th Style
        %th Color
        %th Sizee
        %th Item code
        %th SOH
        %th ARP value



    %tbody
      - @soh_lessthan_arp.each do |soh_lessthan_arp|
        %tr
          %td
            = soh_lessthan_arp.brand_name
          %td
            = soh_lessthan_arp.group_name
          %td
            = soh_lessthan_arp.category
          %td
            = soh_lessthan_arp.style
          %td
            = soh_lessthan_arp.color
          %td
            = soh_lessthan_arp.sizee
          %td
            = soh_lessthan_arp.item_code
          %td
            = soh_lessthan_arp.soh
          %td
            = soh_lessthan_arp.arp_max
      %tr
        %td
          %b
            = "TOTAL: " + @soh_lessthan_arp.count.to_s

:javascript
  $(document).ready(function () {

      function exportTableToCSV($table, filename) {

          var $rows = $table.find('tr:has(td)'),

              // Temporary delimiter characters unlikely to be typed by keyboard
              // This is to avoid accidentally splitting the actual contents
              tmpColDelim = String.fromCharCode(11), // vertical tab character
              tmpRowDelim = String.fromCharCode(0), // null character

              // actual delimiter characters for CSV format
              colDelim = '","',
              rowDelim = '"\r\n"',

              // Grab text from table into CSV formatted string
              csv = '"' + $rows.map(function (i, row) {
                  var $row = $(row),
                      $cols = $row.find('td');

                  return $cols.map(function (j, col) {
                      var $col = $(col),
                          text = $col.text();

                      return text.replace(/"/g, '""'); // escape double quotes

                  }).get().join(tmpColDelim);

              }).get().join(tmpRowDelim)
                  .split(tmpRowDelim).join(rowDelim)
                  .split(tmpColDelim).join(colDelim) + '"';

          // Deliberate 'false', see comment below
          if (false && window.navigator.msSaveBlob) {

              var blob = new Blob([decodeURIComponent(csv)], {
                  type: 'text/csv;charset=utf8'
              });

              // Crashes in IE 10, IE 11 and Microsoft Edge
              // See MS Edge Issue #10396033: https://goo.gl/AEiSjJ
              // Hence, the deliberate 'false'
              // This is here just for completeness
              // Remove the 'false' at your own risk
              window.navigator.msSaveBlob(blob, filename);

          } else if (window.Blob && window.URL) {
              // HTML5 Blob
              var blob = new Blob([csv], { type: 'text/csv;charset=utf8' });
              var csvUrl = URL.createObjectURL(blob);

              $(this)
                  .attr({
                      'download': filename,
                      'href': csvUrl
                  });
          } else {
              // Data URI
              var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

              $(this)
                  .attr({
                      'download': filename,
                      'href': csvData,
                      'target': '_blank'
                  });
          }
      }

      // This must be a hyperlink
      $(".export").on('click', function (event) {
          // CSV
          var args = [$('#dvData>table'), 'export.csv'];

          exportTableToCSV.apply(this, args);

          // If CSV, don't do event.preventDefault() or return false
          // We actually need this to be a typical hyperlink
      });
  });
